
#version 400
	
	in layout(location=0) vec3 position;
	in layout(location=1) vec4 color;
	in layout(location=2) vec3 normal;

	
	uniform mat4 transform;
	uniform mat4 projectionMat;
	//uniform vec3 dominatingColor;
	//uniform vec3 ambientLight;
	//uniform vec3 lightPos;
	//uniform vec3 diffuseColor;
	//uniform mat3 normalMat;
	//out vec4 decolor;
	out vec3 thePosition;
	out vec3 theNormal;

	void main()
	{
	vec4 v= vec4(position,1);
	vec4 newPosition = transform * v;
	vec4 projectedPosition= projectionMat * newPosition;
	gl_Position = projectedPosition;
	//vec3 lightvec = normalize(lightPos-vec3(newPosition));
	//vec3 normalVector= normalize(normalMat * normal);
	//float lightdot= max(dot(lightvec,normalVector),0.0);
	//vec3 difColor=diffuseColor*lightdot;
	//decolor=vec4((ambientLight + difColor) * dominatingColor,1);

	//vec3 lightvec = normalize(lightPos-position);
	//float lightdot= dot(lightvec,normal);
	//decolor=vec4(lightdot,lightdot,lightdot,1);

	//theNormal=vec3(transform*vec4(normal,0.0f));
	theNormal=vec3(mat3(transform)*normal);


	thePosition=vec3(transform*v);
	}